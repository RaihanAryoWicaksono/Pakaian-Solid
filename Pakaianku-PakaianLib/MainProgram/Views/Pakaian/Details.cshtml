@model Pakaianku.Pakaian

@{
    ViewData["Title"] = "Detail Pakaian";
}

<h1 class="text-3xl font-bold mb-6 text-gray-900">Detail Pakaian</h1>

<div class="bg-white shadow-md rounded-lg p-6 mb-6">
    <dl class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <dt class="font-semibold text-gray-700">
            @Html.DisplayNameFor(model => model.Kode)
        </dt>
        <dd class="text-gray-900">
            @Html.DisplayFor(model => model.Kode)
        </dd>
        <dt class="font-semibold text-gray-700">
            @Html.DisplayNameFor(model => model.Nama)
        </dt>
        <dd class="text-gray-900">
            @Html.DisplayFor(model => model.Nama)
        </dd>
        <dt class="font-semibold text-gray-700">
            @Html.DisplayNameFor(model => model.Kategori)
        </dt>
        <dd class="text-gray-900">
            @Html.DisplayFor(model => model.Kategori)
        </dd>
        <dt class="font-semibold text-gray-700">
            @Html.DisplayNameFor(model => model.Warna)
        </dt>
        <dd class="text-gray-900">
            @Html.DisplayFor(model => model.Warna)
        </dd>
        <dt class="font-semibold text-gray-700">
            @Html.DisplayNameFor(model => model.Ukuran)
        </dt>
        <dd class="text-gray-900">
            @Html.DisplayFor(model => model.Ukuran)
        </dd>
        <dt class="font-semibold text-gray-700">
            @Html.DisplayNameFor(model => model.Harga)
        </dt>
        <dd class="text-gray-900">
            Rp@Html.DisplayFor(model => model.Harga)
        </dd>
        <dt class="font-semibold text-gray-700">
            @Html.DisplayNameFor(model => model.Stok)
        </dt>
        <dd class="text-gray-900">
            @Html.DisplayFor(model => model.Stok)
        </dd>
        <dt class="font-semibold text-gray-700">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="text-gray-900">
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>

<div class="flex flex-wrap gap-4 mb-6">
    <a asp-action="Edit" asp-route-id="@Model?.Kode" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md shadow-md transition duration-300 ease-in-out">Edit</a>
    <a asp-action="Index" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-md shadow-md transition duration-300 ease-in-out">Kembali ke Daftar</a>
</div>

<h2 class="text-2xl font-bold mb-4 text-gray-900">Aksi Pakaian</h2>
<div class="bg-white shadow-md rounded-lg p-6">
    <p class="text-gray-700 mb-4">Pilih aksi yang ingin Anda lakukan pada pakaian ini:</p>
    <div class="flex flex-wrap gap-3">
        @foreach (var aksi in Model.GetAksiValid())
        {
            <form asp-controller="Pakaian" asp-action="ProcessAction" method="post">
                <input type="hidden" name="kode" value="@Model.Kode" />
                <input type="hidden" name="aksi" value="@aksi" />
                <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md shadow-md transition duration-300 ease-in-out">@aksi.ToString()</button>
            </form>
        }
    </div>
    @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
    {
        <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mt-4 rounded-md" role="alert">
            <p class="font-bold">Terjadi Kesalahan:</p>
            @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <p>- @modelError.ErrorMessage</p>
            }
        </div>
    }
</div>
